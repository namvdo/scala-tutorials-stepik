type: edu
files:
- name: build.sbt
  visible: false
  text: |2

    lazy val `Computing-the-Square-Root-of-a-Value` = (project in file("."))
      .settings(
        scalaSource in Compile := baseDirectory.value / "src",
        scalaSource in Test := baseDirectory.value / "test",
        libraryDependencies += "org.scalatest" %% "scalatest" % "3.0.5"
      )
  learner_created: false
- name: src/ComputingSquareRoot.scala
  visible: true
  placeholders:
  - offset: 160
    length: 0
    placeholder_text: //you can just return the guess here
    initial_state:
      length: 36
      offset: 155
    initialized_from_dependency: false
    possible_answer: guess
    selected: false
    status: Unchecked
  - offset: 202
    length: 66
    placeholder_text: //here we need to put an expression for evaluating a better
      guess
    initial_state:
      length: 65
      offset: 275
    initialized_from_dependency: false
    possible_answer: (guess + x/ guess) / 2
    selected: true
    status: Unchecked
  text: |-
    object ComputingSquareRoot{

      def sqrt(x: Double) = sqrtIter(1.0, x)

      def sqrtIter (guess: Double, x: Double): Double =
        if (isGoodEnough(guess, x)) //you can just return the guess here
        else sqrtIter(improve(guess, x), x)

      def improve(guess: Double, x: Double) = //here we need to put an expression for evaluating a better guess

      def isGoodEnough(guess: Double, x: Double) = math.abs(guess * guess - x) < 0.001

      def main(args: Array[String]): Unit = {
        println(sqrt(36))
        println(sqrt(255))
      }
    }
  learner_created: false
- name: test/TestSpec.scala
  visible: false
  text: |
    import ComputingSquareRoot.sqrt
    import org.scalatest.Matchers
    import org.scalatest.refspec.RefSpec

    class Test extends RefSpec with Matchers{

      def `check factorial`(): Unit = {
        sqrt(4).round shouldBe 2
        sqrt(36).round shouldBe 6
      }

    }
  learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: Fri, 30 Oct 2020 11:40:19 UTC
record: -1
