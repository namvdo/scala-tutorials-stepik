type: edu
files:
- name: src/HigherOrderFunctions.scala
  visible: true
  placeholders:
  - offset: 30
    length: 57
    placeholder_text: /*put here an appropriate type of an f input parameter*/
    initial_state:
      length: 56
      offset: 50
    initialized_from_dependency: false
    possible_answer: Int
    selected: true
    status: Unchecked
  - offset: 30
    length: 57
    placeholder_text: /*put here an appropriate type of an f output result*/
    initial_state:
      length: 54
      offset: 110
    initialized_from_dependency: false
    possible_answer: Int
    selected: false
    status: Unchecked
  - offset: 198
    length: 1
    placeholder_text: // TODO
    initial_state:
      length: 7
      offset: 272
    initialized_from_dependency: false
    possible_answer: 1
    selected: false
    status: Unchecked
  - offset: 233
    length: 0
    placeholder_text: /*here you need to insert initial acc value*/
    initial_state:
      length: 45
      offset: 312
    initialized_from_dependency: false
    possible_answer: 0
    selected: true
    status: Unchecked
  text: |-
    object HigherOrderFunctions {
      def sumBetween(f: /*put here an appropriate type of an f input parameter*/ => /*put here an appropriate type of an f output result*/, a: Int, b: Int): Int = {
        def loop(x: Int, acc: Int): Int = {
          if (x > b) acc
          else loop(x + // TODO, acc + f(x))
        }

        loop(a, /*here you need to insert initial acc value*/)
      }

      def main(args: Array[String]): Unit = {
        println(sumBetween (x => x, 1, 10))
      }

    }
  learner_created: false
- name: test/Test.scala
  visible: false
  text: |
    import HigherOrderFunctions.sumBetween
    import org.scalatest.refspec.RefSpec
    import org.scalatest.Matchers

    class Test extends RefSpec with Matchers {

      def `check tail rec sum`(): Unit = {
        sumBetween(x => x, 1, 10) shouldBe 55
      }

    }
  learner_created: false
- name: build.sbt
  visible: false
  text: |2

    lazy val `Higher-Order-Functions` = (project in file("."))
      .settings(
        scalaSource in Compile := baseDirectory.value / "src",
        scalaSource in Test := baseDirectory.value / "test",
        libraryDependencies += "org.scalatest" %% "scalatest" % "3.0.5"
      )
  learner_created: false
status: Solved
feedback:
  message: Congratulations!
  time: Fri, 30 Oct 2020 13:25:44 UTC
record: -1
